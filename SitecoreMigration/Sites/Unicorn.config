<!--
	This is an example of how to configure Unicorn to override the location on disk to store the serialized items.

	If used, this should be present on all environments where Unicorn is active (usually all but CD).
	
	NOTE: this config file contains several examples. It should not be activated without selecting the mode you wish to use 
	(and in some cases not activated at all if patching a config level path)
-->
<configuration 
	xmlns:patch="http://www.sitecore.net/xmlconfig/">
	<sitecore>
		<unicorn>
			<!--
				There are three ways you can set the root path:
				* Per-configuration
				* Using an abstract base configuration with variables
				* For all configurations that do not define something else
				
				All of the options rely on patching the target data store.
				The target data store is where we write serialized items to.

				Note the target data store's rootPath can be any of:
				Absolute filesystem path, e.g. c:\foo\bar
				Web-root-relative path, e.g. ~/data/serialization or ~/../out-of-root-serialization
				Data-folder-relative path, e.g. $(dataFolder)\serializedItems
				A path using a custom sc.variable-defined configuration var, e.g. $(sourcePath)\Feature\Foo

				DO NOT SHARE A ROOT PATH BETWEEN CONFIGURATIONS.
				They can clobber each other's folders. You may inject the name of the current
				configuration as a variable with $(configurationName).
			-->
			<!--
				EXAMPLE: Change the global defaults for all configs
			-->
			<defaults>
				<!-- 
					Set Dilithium SQL as the default source data store. Configurations may of course override this.
					Patch this out if you do not wish to default to use Dilithium to read from Sitecore.
				-->
				<sourceDataStore>
					<patch:attribute name="type">Unicorn.Data.Dilithium.DilithiumSitecoreDataStore, Unicorn</patch:attribute>
				</sourceDataStore>
				<roleDataStore>
					<patch:attribute name="physicalRootPath">c:\data\Unicorn\$(configurationName)\Roles</patch:attribute>
				</roleDataStore>
				<userDataStore>
					<patch:attribute name="physicalRootPath">c:\data\Unicorn\$(configurationName)\Users</patch:attribute>
				</userDataStore>
				<!-- 
					Set Dilithium Serialized as the default source data store. Configurations may of course override this.
					Patch this out if you do not wish to default to use Dilithium to read from Disk.
					This can use additional memory compared to DiSQL when syncing media items.
				<targetDataStore><patch:attribute name="type">Unicorn.Data.Dilithium.DilithiumSerializationFileSystemDataStore, Unicorn</patch:attribute></targetDataStore>
				-->
				<!--
					VERY IMPORTANT: THIS CONFIG MUST LOAD AFTER THE REGULAR UNICORN CONFIGURATION TO PATCH THE DEFAULTS
					Sitecore config patch files load in alphabetical order, followed by folders.
					So either place this in App_Config/Include/Unicorn, or a folder that loads after that like 'zSite'
					-->
				<targetDataStore>
					<patch:attribute name="type">Unicorn.Data.Dilithium.DilithiumSerializationFileSystemDataStore, Unicorn</patch:attribute>
					<patch:attribute name="physicalRootPath">c:\data\Unicorn\$(configurationName)</patch:attribute>
				</targetDataStore>
			</defaults>
			<configurations>
				<configuration name="masterDev" description="Development Content of Master" dependencies="users">
					<predicate type="Unicorn.Predicates.SerializationPresetPredicate, Unicorn" singleInstance="true">
						<include database="master" path="/sitecore/Templates/Areas" name="Templates"/>
						<include database="master" path="/sitecore/templates/System/Language" name="System templates" />
						<include database="master" path="/sitecore/templates/User Defined" name="User templates" />
						<include database="master" path="/sitecore/Layout/Layouts/Areas" name="Layouts"/>
						<include database="master" path="/sitecore/Layout/Renderings/Areas" name="Renderings"/>
						<include database="master" path="/sitecore/System/Languages" name="Languages"/>
					</predicate>
				</configuration>
				<configuration name="masterContent" description="Content of Master" dependencies="masterDev">
					<predicate type="Unicorn.Predicates.SerializationPresetPredicate, Unicorn" singleInstance="true">
						<include database="master" path="/sitecore/content/Content" name="content"/>
						<include database="master" path="/sitecore/content/Global" name="Global"/>
						<include database="master" path="/sitecore/content/Volvo" name="Volvo"/>
						<include database="master" path="/sitecore/media library/Vbs" name="Vbs_Media_Library"/>
					</predicate>
				</configuration>
				<configuration name="webDev" description="Dev Content of Web" dependencies="users">
					<predicate type="Unicorn.Predicates.SerializationPresetPredicate, Unicorn" singleInstance="true">
						<include database="web" path="/sitecore/Templates/Areas" name="Templates"/>
						<include database="web" path="/sitecore/templates/System/Language" name="System templates" />
						<include database="web" path="/sitecore/templates/User Defined" name="User templates" />
						<include database="web" path="/sitecore/Layout/Layouts/Areas" name="Layouts"/>
						<include database="web" path="/sitecore/Layout/Renderings/Areas" name="Renderings"/>
						<include database="web" path="/sitecore/System/Languages" name="Languages"/>
					</predicate>
				</configuration>
				<configuration name="webContent" description="Content of Web" dependencies="webDev">
					<predicate type="Unicorn.Predicates.SerializationPresetPredicate, Unicorn" singleInstance="true">
						<include database="web" path="/sitecore/content/Content" name="content"/>
						<include database="web" path="/sitecore/content/Global" name="Global"/>
						<include database="web" path="/sitecore/content/Volvo" name="Volvo"/>
						<include database="web" path="/sitecore/media library/Vbs" name="Vbs_Media_Library"/>
					</predicate>
				</configuration>
				<configuration name="users" description="Users">
					<predicate type="Unicorn.Roles.Predicates.EmptyPredicate, Unicorn.Roles" singleInstance="true" />
					<rolePredicate type="Unicorn.Roles.RolePredicates.ConfigurationRolePredicate, Unicorn.Roles" singleInstance="true">
						<include domain="sitecore" />
					</rolePredicate>
					<userPredicate type="Unicorn.Users.UserPredicates.ConfigurationUserPredicate, Unicorn.Users" singleInstance="true">
						<include domain="sitecore" pattern=".+" />
					</userPredicate>
					<userSyncConfiguration removeOrphans="false" defaultPassword="random" minPasswordLength="8" type="Unicorn.Users.Loader.DefaultUserSyncConfiguration, Unicorn.Users" singleInstance="true" />
					<roleSyncConfiguration removeOrphans="false" type="Unicorn.Roles.Loader.DefaultRoleSyncConfiguration, Unicorn.Roles" singleInstance="true" />
				</configuration>
			</configurations>
		</unicorn>
		<pipelines>
			<unicornSyncStart>
				<!-- 
					Initializes Dilithium cache when sync starts up for all configs. 
					Without this, even if configs use the Dilithium data store no optimizations will be done during syncs.
				-->
				<processor type="Unicorn.Data.Dilithium.Pipelines.InitializeDilithium, Unicorn" />
			</unicornSyncStart>
			<unicornReserializeStart>
				<!-- 
					Initializes Dilithium cache when reserialize starts up for all configs. 
					Without this, even if configs use the Dilithium data store no optimizations will be done during reserialize.
				-->
				<processor type="Unicorn.Data.Dilithium.Pipelines.InitializeDilithium, Unicorn" />
			</unicornReserializeStart>
		</pipelines>
	</sitecore>
</configuration>