{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "dnsNameForPublicIP": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Globally unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Location of uploaded artifacts"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "SAS token for artifacts storage account"
      }
    },
    "oldSitecore": {
      "type": "string",
      "minLength": 10,
      "metadata": {
        "description": "Sitecore old app zip file."
      }
    },
    "newSitecore": {
      "type": "string",
      "minLength": 10,
      "metadata": {
        "description": "Sitecore new app zip file."
      }
    },
    "unicornPackage": {
      "type": "string",
      "minLength": 4,
      "metadata": {
        "description": "Zip with Unicorn tool."
      }
    },
    "licenseFile": {
      "type": "string",
      "minLength": 4,
      "metadata": {
        "description": "License file for Sitecore."
      }
    },
    "unicornConfig": {
      "type": "string",
      "minLength": 4,
      "metadata": {
        "description": "Unicorn configuration XML file."         
      }
    },
    "unicornLangPack": {
      "type": "string",
      "minLength": 4,
      "metadata": {
        "description": "Unicorn languages zip file."         
      }
    },
    "sqlAdministratorLogin": {
      "type": "string",
      "metadata": {
        "description": "The admin user of the SQL Server"
      }
    },
    "sqlAdministratorLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password of the admin user of the SQL Server"
      }
    }
  },
  "variables": {
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "OSDiskName": "osdiskforwindowssimple",
    "nicName": "sitecoreVMNic",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "Subnet",
    "subnetPrefix": "10.0.0.0/24",
    "vhdStorageType": "Standard_LRS",
    "publicIPAddressName": "sitecorePublicIP",
    "publicIPAddressType": "Dynamic",
    "vhdStorageContainerName": "vhds",
    "vmName": "sitecoreWVM",
    "vmSize": "Standard_D8_v3",
    "virtualNetworkName": "sitecoreVNET",
    "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]",
    "vhdStorageAccountName": "[concat('vhdstorage', uniqueString(resourceGroup().id))]",
    "oldsqlserverName": "oldstcoresqlsrv",
    "newsqlserverName": "newstcoresqlsrv",
    "coredbName": "st_core",
    "webdbName": "st_web",
    "masterdbName": "st_master",
    "dscArchiveFolder": "DSC",
    "dscArchiveFileName": "setup.zip",
    "sqlEdition": "PremiumRS",
    "sqlServiceObjective": "PRS1",
    "deployDatabase": "[bool('true')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('vhdStorageAccountName')]",
      "apiVersion": "2016-01-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "StorageAccount"
      },
      "sku": {
        "name": "[variables('vhdStorageType')]"
      },
      "kind": "Storage"
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "PublicIPAddress"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VirtualNetwork"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NetworkInterface"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VirtualMachine"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('vhdStorageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('vhdStorageAccountName')), '2016-01-01').primaryEndpoints.blob, variables('vhdStorageContainerName'), '/', variables('OSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('vhdStorageAccountName')), '2016-01-01').primaryEndpoints.blob]"
          }
        }
      },
      "resources": [
        {
          "name": "Microsoft.Powershell.DSC",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
          ],
          "properties": {
            "forceUpdateTag": "1",
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.20",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "configuration": {
                "url": "[concat(parameters('_artifactsLocation'), '/', variables('dscArchiveFolder'), '/', variables('dscArchiveFileName'))]",
                "script": "setup.ps1",
                "function": "Main"
              },
              "configurationArguments": {
                "nodeName": "[variables('vmName')]",
                "oldSitecore": "[concat(parameters('_artifactsLocation'), '/', 'Sites', '/', parameters('oldSitecore'), parameters('_artifactsLocationSasToken'))]",
                "newSitecore": "[concat(parameters('_artifactsLocation'), '/', 'Sites', '/', parameters('newSitecore'), parameters('_artifactsLocationSasToken'))]",
                "unicornPackage": "[concat(parameters('_artifactsLocation'), '/', 'Sites', '/', parameters('unicornPackage'), parameters('_artifactsLocationSasToken'))]",
                "licenseFile": "[concat(parameters('_artifactsLocation'), '/', 'Sites', '/', parameters('licenseFile'), parameters('_artifactsLocationSasToken'))]",
                "unicornConfig": "[concat(parameters('_artifactsLocation'), '/', 'Sites', '/', parameters('unicornConfig'), parameters('_artifactsLocationSasToken'))]",
                "unicornLangPack": "[concat(parameters('_artifactsLocation'), '/', 'Sites', '/', parameters('unicornLangPack'), parameters('_artifactsLocationSasToken'))]"
              }
            },
            "protectedSettings": {
              "configurationUrlSasToken": "[parameters('_artifactsLocationSasToken')]"
            }
          }
        },
        {
            "name": "install-script",
            "type": "extensions",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "CustomScript1 for Windows VM"
            },
            "dependsOn": [
              "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]",
              "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('vmName'), 'Microsoft.Powershell.DSC')]"
            ],
            "properties": {
                "forceUpdateTag": "1",
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.7",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[concat(parameters('_artifactsLocation'), '/Scripts/Setup-Role.ps1', parameters('_artifactsLocationSasToken'))]"
                    ],
                    "commandToExecute": "[concat('powershell -noninteractive -ExecutionPolicy Bypass', ' -file .\\Scripts\\Setup-Role.ps1', ' -sqlAdministratorLoginPassword ', parameters('sqlAdministratorLoginPassword'), ' -sqlAdministratorLogin ', parameters('sqlAdministratorLogin'), ' -dbNewName ', variables('newsqlserverName'), ' -dbOldName ', variables('oldsqlserverName'), ' -fqdn ', reference(variables('publicIPAddressName')).dnsSettings.fqdn, ' -licenseFile ', parameters('licenseFile'), ' -unicornConfig ', parameters('unicornConfig'))]"
                }
            }
        }
      ]
    },
    {
      "name": "[variables('oldsqlserverName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "oldstcoreSqlServer"
      },
      "apiVersion": "2014-04-01",
      "properties": {
        "administratorLogin": "[parameters('sqlAdministratorLogin')]",
        "administratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
        "version": "12.0"
      },
      "resources": [
        {
          "name": "[variables('coredbName')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "oldstcoreDB"
          },
          "apiVersion": "2015-01-01",
          "dependsOn": [
            "[variables('oldsqlserverName')]"
          ],
          "condition": "[variables('deployDatabase')]",
          "properties": {
            "edition": "[variables('sqlEdition')]",
            "collation": "SQL_Latin1_General_CP1_CI_AS",
            "maxSizeBytes": "214748364800",
            "requestedServiceObjectiveName": "[variables('sqlServiceObjective')]"
          },
          "resources": [
            {
                "name": "import",
                "type": "extensions",
                "apiVersion": "2014-04-01-preview",
                "dependsOn": [
                    "[resourceId('Microsoft.Sql/servers/databases', variables('oldsqlserverName'), variables('coredbName'))]"
                ],
                "tags": {
                    "displayName": "SQL Database Import for oldCore"
                },
                "condition": "[variables('deployDatabase')]",
                "properties": {
                    "storageKeyType": "SharedAccessKey",
                    "storageKey": "[parameters('_artifactsLocationSasToken')]",
                    "storageUri": "[concat(parameters('_artifactsLocation'), '/', 'Databases', '/', 'Sitecore_Core_Authoring.bacpac')]",
                    "administratorLogin": "[parameters('sqlAdministratorLogin')]",
                    "administratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
                    "operationMode": "Import"
                }
            }
          ]
        },
        {
          "name": "[variables('webdbName')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "oldstwebDB"
          },
          "apiVersion": "2015-01-01",
          "dependsOn": [
            "[variables('oldsqlserverName')]"
          ],
          "condition": "[variables('deployDatabase')]",
          "properties": {
            "edition": "[variables('sqlEdition')]",
            "collation": "SQL_Latin1_General_CP1_CI_AS",
            "maxSizeBytes": "214748364800",
            "requestedServiceObjectiveName": "[variables('sqlServiceObjective')]"
          },
          "resources": [
            {
                "name": "import",
                "type": "extensions",
                "apiVersion": "2014-04-01-preview",
                "dependsOn": [
                    "[resourceId('Microsoft.Sql/servers/databases', variables('oldsqlserverName'), variables('webdbName'))]"
                ],
                "tags": {
                    "displayName": "SQL Database Import for oldCore"
                },
                "condition": "[variables('deployDatabase')]",
                "properties": {
                    "storageKeyType": "SharedAccessKey",
                    "storageKey": "[parameters('_artifactsLocationSasToken')]",
                    "storageUri": "[concat(parameters('_artifactsLocation'), '/', 'Databases', '/', 'Sitecore_Web.bacpac')]",
                    "administratorLogin": "[parameters('sqlAdministratorLogin')]",
                    "administratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
                    "operationMode": "Import"
                }
            }
          ]
        },
        {
          "name": "[variables('masterdbName')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "oldstmasterDB"
          },
          "apiVersion": "2015-01-01",
          "dependsOn": [
            "[variables('oldsqlserverName')]"
          ],
          "condition": "[variables('deployDatabase')]",
          "properties": {
            "edition": "[variables('sqlEdition')]",
            "collation": "SQL_Latin1_General_CP1_CI_AS",
            "maxSizeBytes": "214748364800",
            "requestedServiceObjectiveName": "[variables('sqlServiceObjective')]"
          },
          "resources": [
            {
                "name": "import",
                "type": "extensions",
                "apiVersion": "2014-04-01-preview",
                "dependsOn": [
                    "[resourceId('Microsoft.Sql/servers/databases', variables('oldsqlserverName'), variables('masterdbName'))]"
                ],
                "tags": {
                    "displayName": "SQL Database Import for oldCore"
                },
                "condition": "[variables('deployDatabase')]",
                "properties": {
                    "storageKeyType": "SharedAccessKey",
                    "storageKey": "[parameters('_artifactsLocationSasToken')]",
                    "storageUri": "[concat(parameters('_artifactsLocation'), '/', 'Databases', '/', 'Sitecore_Master_Authoring.bacpac')]",
                    "administratorLogin": "[parameters('sqlAdministratorLogin')]",
                    "administratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
                    "operationMode": "Import"
                }
            }
          ]
        },
        {
          "type": "firewallrules",
          "apiVersion": "2014-04-01",
          "dependsOn": [
            "[variables('oldsqlserverName')]"
          ],
          "location": "[resourceGroup().location]",
          "name": "AllowAllWindowsAzureIps",
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          }
        }
      ]
    },
    {
      "name": "[variables('newsqlserverName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "newstcoreSqlServer"
      },
      "apiVersion": "2014-04-01",
      "properties": {
        "administratorLogin": "[parameters('sqlAdministratorLogin')]",
        "administratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
        "version": "12.0"
      },
      "resources": [
        {
          "name": "[variables('coredbName')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "newstcoreDB"
          },
          "apiVersion": "2015-01-01",
          "dependsOn": [
            "[variables('newsqlserverName')]"
          ],
          "condition": "[variables('deployDatabase')]",
          "properties": {
            "edition": "[variables('sqlEdition')]",
            "collation": "SQL_Latin1_General_CP1_CI_AS",
            "maxSizeBytes": "214748364800",
            "requestedServiceObjectiveName": "[variables('sqlServiceObjective')]"
          },
          "resources": [
            {
                "name": "import",
                "type": "extensions",
                "apiVersion": "2014-04-01-preview",
                "dependsOn": [
                    "[resourceId('Microsoft.Sql/servers/databases', variables('newsqlserverName'), variables('coredbName'))]"
                ],
                "tags": {
                    "displayName": "SQL Database Import for oldCore"
                },
                "condition": "[variables('deployDatabase')]",
                "properties": {
                    "storageKeyType": "SharedAccessKey",
                    "storageKey": "[parameters('_artifactsLocationSasToken')]",
                    "storageUri": "[concat(parameters('_artifactsLocation'), '/', 'Databases', '/', 'new_sitecore_core.bacpac')]",
                    "administratorLogin": "[parameters('sqlAdministratorLogin')]",
                    "administratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
                    "operationMode": "Import"
                }
            }
          ]
        },
        {
          "name": "[variables('webdbName')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "newstwebDB"
          },
          "apiVersion": "2015-01-01",
          "dependsOn": [
            "[variables('newsqlserverName')]"
          ],
          "condition": "[variables('deployDatabase')]",
          "properties": {
            "edition": "[variables('sqlEdition')]",
            "collation": "SQL_Latin1_General_CP1_CI_AS",
            "maxSizeBytes": "214748364800",
            "requestedServiceObjectiveName": "[variables('sqlServiceObjective')]"
          },
          "resources": [
            {
                "name": "import",
                "type": "extensions",
                "apiVersion": "2014-04-01-preview",
                "dependsOn": [
                    "[resourceId('Microsoft.Sql/servers/databases', variables('newsqlserverName'), variables('webdbName'))]"
                ],
                "tags": {
                    "displayName": "SQL Database Import for oldCore"
                },
                "condition": "[variables('deployDatabase')]",
                "properties": {
                    "storageKeyType": "SharedAccessKey",
                    "storageKey": "[parameters('_artifactsLocationSasToken')]",
                    "storageUri": "[concat(parameters('_artifactsLocation'), '/', 'Databases', '/', 'new_sitecore_web.bacpac')]",
                    "administratorLogin": "[parameters('sqlAdministratorLogin')]",
                    "administratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
                    "operationMode": "Import"
                }
            }
          ]
        },
        {
          "name": "[variables('masterdbName')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "newstmasterDB"
          },
          "apiVersion": "2015-01-01",
          "dependsOn": [
            "[variables('newsqlserverName')]"
          ],
          "condition": "[variables('deployDatabase')]",
          "properties": {
            "edition": "[variables('sqlEdition')]",
            "collation": "SQL_Latin1_General_CP1_CI_AS",
            "maxSizeBytes": "214748364800",
            "requestedServiceObjectiveName": "[variables('sqlServiceObjective')]"
          },
          "resources": [
            {
                "name": "import",
                "type": "extensions",
                "apiVersion": "2014-04-01-preview",
                "dependsOn": [
                    "[resourceId('Microsoft.Sql/servers/databases', variables('newsqlserverName'), variables('masterdbName'))]"
                ],
                "tags": {
                    "displayName": "SQL Database Import for oldCore"
                },
                "condition": "[variables('deployDatabase')]",
                "properties": {
                    "storageKeyType": "SharedAccessKey",
                    "storageKey": "[parameters('_artifactsLocationSasToken')]",
                    "storageUri": "[concat(parameters('_artifactsLocation'), '/', 'Databases', '/', 'new_sitecore_master.bacpac')]",
                    "administratorLogin": "[parameters('sqlAdministratorLogin')]",
                    "administratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
                    "operationMode": "Import"
                }
            }
          ]
        },
        {
          "type": "firewallrules",
          "apiVersion": "2014-04-01",
          "dependsOn": [
            "[variables('newsqlserverName')]"
          ],
          "location": "[resourceGroup().location]",
          "name": "AllowAllWindowsAzureIps",
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          }
        }
      ]
    }
  ],
  "outputs": {
    "vmfqdn": {
      "type" : "string",
      "value" : "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
    },
    "oldsqlfqdn": {
      "type" : "string",
      "value" : "[reference(concat('Microsoft.Sql/servers/', variables('oldsqlserverName'))).fullyQualifiedDomainName]"
    },
    "newsqlfqdn": {
      "type" : "string",
      "value" : "[reference(concat('Microsoft.Sql/servers/', variables('newsqlserverName'))).fullyQualifiedDomainName]"
    }
  }
}